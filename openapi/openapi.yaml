openapi: 3.0.0
info:
  title: API
  version: 1.0.0
paths:
  /users:
    get:
      summary: Получить список всех пользователей
      tags:
        - users
      description: Возвращает список всех пользователей. Пароли не возвращаются.
      responses:
        '200':
          description: Успешный ответ. Возвращает массив пользователей.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '500':
          $ref: '#/components/responses/InternalServerError'
    post:
      summary: Создать нового пользователя
      tags:
        - users
      description: Создает нового пользователя.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: Email пользователя
                  format: email
                password:
                  type: string
                  description: Пароль пользователя
                  writeOnly: true
              required:
                - email
                - password
      responses:
        '201':
          description: Пользователь успешно создан. Возвращает созданного пользователя (без пароля).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /users/{id}:
    patch:
      summary: Обновить существующего пользователя (частично)
      tags:
        - users
      description: Обновляет существующего пользователя по ID (частично).
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: uint
          description: ID пользователя для обновления
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdate'  # Используем UserUpdate, который не требует email/password
      responses:
        '200':
          description: Пользователь успешно обновлен. Возвращает обновленного пользователя (без пароля).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '404':
          $ref: '#/components/responses/BadRequestError'
        '500':
          $ref: '#/components/responses/InternalServerError'
    delete:
      summary: Удалить пользователя
      tags:
        - users
      description: Удаляет пользователя по ID.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: uint
          description: ID пользователя для удаления
      responses:
        '204':
          description: Пользователь успешно удален (No Content).
        '404':
          $ref: '#/components/responses/BadRequestError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /users/{id}/tasks:
    get:
      summary: Get tasks for a specific user
      tags:
        - tasks
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: uint
      responses:
        '200':
          description: A list of tasks for the user
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
        '404':
          description: User not found or no tasks found
  /tasks:
    get:
      summary: Получить список всех задач
      tags:
        - tasks
      description: Возвращает список всех задач из базы данных.
      responses:
        '200':
          description: Успешный ответ. Возвращает массив задач.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
        '500':
          $ref: '#/components/responses/InternalServerError'  # Используем переиспользуемый ответ

    post:
      summary: Создать новую задачу
      tags:
        - tasks
      description: Создает новую задачу в базе данных.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                task:
                  type: string
                  description: Описание задачи
                is_done:
                  type: boolean
                  description:  c
                user_id:
                  type: integer
                  format: uint
                  description: user_id
              required:
                - user_id
                - task
      responses:
        '201':
          description: Задача успешно создана. Возвращает созданную задачу.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '400':
          $ref: '#/components/responses/BadRequestError'  # Используем переиспользуемый ответ
        '500':
          $ref: '#/components/responses/InternalServerError'  # Используем переиспользуемый ответ
  /tasks/{id}:
    put: # or patch
      summary: Обновить существующую задачу
      tags:
        - tasks
      description: Обновляет задачу с указанным ID.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: uint
          description: ID задачи для обновления
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
      responses:
        '200':
          description: Задача успешно обновлена. Возвращает обновленную задачу.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '404':
          description: Задача не найдена.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          $ref: '#/components/responses/InternalServerError'
    delete:
      summary: Удалить задачу
      tags:
        - tasks
      description: Удаляет задачу с указанным ID.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: uint
          description: ID задачи для удаления
      responses:
        '204':
          description: Задача успешно удалена (No Content).
        '404':
          description: Задача не найдена.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: uint
          description: идентификатор
          readOnly: true
        email:
          type: string
          description: емаил
          format: email
        password:
          type: string
          description: пароль
      required:
        - email
    UserUpdate:
      type: object
      properties:
        email:
          type: string
          description: Email пользователя
          format: email
        password:
          type: string
          description: Пароль пользователя (для обновления)
          writeOnly: true
    Task:
      type: object
      properties:
        id:
          type: integer
          format: uint
          description: Уникальный идентификатор задачи
          readOnly: true  # ID генерируется сервером
        task:
          type: string
          description: Описание задачи
        is_done:
          type: boolean
          description: Статус выполнения задачи (true - выполнена, false - не выполнена)
        user_id:
          type: integer
          format: uint
      required:
        - task
    Error:
      type: object
      properties:
        error:
          type: string
          description: Сообщение об ошибке
  responses:
    BadRequestError:
      description: Некорректный запрос
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    InternalServerError:
      description: Ошибка сервера
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'


